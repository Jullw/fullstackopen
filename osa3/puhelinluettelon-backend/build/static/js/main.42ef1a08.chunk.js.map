{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newPerson","post","personID","delete","modifiedPerson","put","Filter","searchName","handleSearch","value","onChange","Add","addPerson","newNumber","newName","handleNameChange","handleNumberChange","onSubmit","type","Persons","personsToShow","handleClick","map","person","name","Person","number","id","DeletePersonButton","onClick","ErrorNotification","text","className","SuccesNotification","NotificationHandler","App","useState","persons","setPersons","setNewName","setNewNumber","setSearchName","setText","setType","useEffect","personsService","changeNumber","find","p","toLowerCase","changedPersonObject","returnedPerson","pe","catch","error","filter","includes","event","target","preventDefault","console","log","length","some","window","confirm","concat","personName","deleteContact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.42ef1a08.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\n//https://lit-savannah-43015.herokuapp.com/api/persons\n\nconst getAll = () => {\n    const request =  axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newPerson => {\n    const request = axios.post(baseUrl, newPerson)\n    return request.then(response => response.data)\n}\n\nconst deletePerson = (personID) => {\n    const request = axios.delete(`${baseUrl}/${personID}`)\n    return request.then(response => response.data)\n}\n\nconst replacePerson = (personID , modifiedPerson) => {\n    const request = axios.put(`${baseUrl}/${personID}`, modifiedPerson)\n    return request.then(response => response.data)\n}\nexport default {getAll, create, deletePerson, replacePerson}\n","import React, { useState, useEffect } from 'react'\nimport personsService from './services/persons'\n\n\nconst Filter = ({ searchName, handleSearch }) => {\n  return (\n    <div>\n      search: <input value={searchName} onChange={handleSearch}></input>\n    </div>\n  )\n}\n\n\nconst Add = ({ addPerson, newNumber, newName, handleNameChange, handleNumberChange }) => {\n\n  return (\n    <form onSubmit={addPerson}>\n      <div>\n        name: <input value={newName} onChange={handleNameChange} />\n      </div>\n      <div>\n        number: <input value={newNumber} onChange={handleNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\"> add</button>\n      </div>\n    </form>\n  )\n}\n\nconst Persons = ({ personsToShow, handleClick }) => {\n  return (\n    <div>\n      {personsToShow.map((person) =>\n        <Person key={person.name} person={person} handleClick={handleClick} />\n      )}\n    </div>\n  )\n}\n\nconst Person = ({ person, handleClick }) => {\n\n  return (\n    <div>\n      <p> {person.name} {person.number} <DeletePersonButton handleClick={() => handleClick(person.id, person.name)} /></p>\n    </div>\n  )\n}\n\nconst DeletePersonButton = ({ handleClick }) => <button onClick={handleClick}> Delete </button>\n\n// delete Notification\n\n// add Notification\n\n// replace Notification\n\n// alreadyDeleted\n\nconst ErrorNotification = ({ text }) => {\n  return (\n    <div className='error'>\n      <h2> {text} </h2>\n    </div>\n  )\n}\n\nconst SuccesNotification = ({ text }) => {\n  return (\n    <div className='success'>\n      <h2> {text} </h2>\n    </div>\n  )\n}\n\nconst NotificationHandler = ({ type, text }) => {\n\n  if (type === 'success') {\n    return (\n      <SuccesNotification text={text} />\n    )\n  } else if (type === 'error') {\n    return (\n      <ErrorNotification text={text} />\n    )\n  } else {\n    return null\n    \n    \n  }\n}\n\n\n\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [searchName, setSearchName] = useState('')\n\n  // Text määrittelee tekstin ilmoitukselle. (Added {nimi}, Deleted {nimi}, Replaced {Nimi}\")\n  // Type määrittelee minkä tyyppinen ilmoitus on eli add,replace,delete\n  const [text, setText] = useState('')\n  const [type, setType] = useState('')\n\n\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then(persons => {\n        setPersons(persons)\n      })\n  }, [])\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    console.log(event.target)\n\n    if (newName.length > 0) {\n\n      const newPerson = {\n        name: newName,\n        number: newNumber\n      }\n\n      persons.some(person => person.name.toLowerCase() === newName.toLowerCase()) ?\n        window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)\n          ? changeNumber() : console.log('')\n        : personsService\n          .create(newPerson)\n          .then(returnedPerson => {\n            setPersons(persons.concat(returnedPerson))\n            setText(`Added ${returnedPerson.name}`)\n            setType('success')\n          })\n          .catch(error => {\n            console.log(error.response.data.error)\n            setText(`${error.response.data.error}`)\n            setType('error')\n          })\n      setNewName('')\n      setNewNumber('')\n    }\n  }\n\n\n  const deleteContact = (personID) => {\n\n    const pe = persons.find(p => p.id === personID)\n\n    personsService\n      .deletePerson(personID)\n      .then(() => {\n        setPersons(persons.filter(person => person.id !== personID))\n        setType('success')\n        setText(`Successfully deleted ${pe.name}`)\n      }\n    )\n  }\n\n  const changeNumber = () => {\n\n    const person = persons.find(p => p.name.toLowerCase() === newName.toLowerCase())\n\n    const changedPersonObject = { ...person, number: newNumber }\n\n    personsService\n      .replacePerson(changedPersonObject.id, changedPersonObject)\n      .then(returnedPerson => {\n        setType('success')\n        setText(`Successfully replaced ${returnedPerson.name}`)\n        setPersons(persons.map(pe => pe.id === returnedPerson.id ? returnedPerson : pe))\n      }).catch(error => {\n        setType('error')\n        setText(`the contact '${person.name}' was already deleted from server`)\n        setPersons(persons.filter(p => p.id !== person.id))\n      })\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const handleSearch = (event) => {\n    setSearchName(event.target.value)\n\n  }\n\n  const handleClick = (personID, personName) => {\n    if (window.confirm(`Delete ${personName} ?`)) {\n      deleteContact(personID)\n    }\n  }\n\n  const personsToShow = false\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(searchName))\n\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <NotificationHandler type={type} text={text} />\n      <Filter searchName={searchName} handleSearch={handleSearch} />\n\n      <h2>Add</h2>\n      <Add addPerson={addPerson} newName={newName} newNumber={newNumber}\n        handleNameChange={handleNameChange} handleNumberChange={handleNumberChange}\n      />\n      <h2>Numbers</h2>\n      <Persons personsToShow={personsToShow} handleClick={handleClick} />\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}